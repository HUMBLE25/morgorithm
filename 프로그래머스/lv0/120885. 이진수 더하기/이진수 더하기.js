function solution(bin1, bin2) {
    //수도코드
    //이진수의 합을 구한다.
    //이진수 끼리의 덧셈을 어떻게 하지? 
    //컴퓨터는 원래 이진수를 다루잖아 
    //십진수로 변환후 더하다음 다시 이진수로 변환할까?
    //이진수자체에서 연산을 할까?
    //'0'을 제외하고 0으로 시작하지 않는다.
    //이진수 계산법을 적용해주면 되나??
    //각자릿수의 합이 2보다 크다면 그때의 자리는 0으로 바꾸고 앞에 1을 추가해준다.
    //인덱스로 접근하면 뒤든 앞이든 상관없이 접근할수 있다.
    //두수의 합을 고려하여 새로운 문자열을 만들어주면 된다.
    //두수의 합을 순서대로 붙여주면 된다.
    //이진수의 길이가 다른경우는?
    //가장뒤의 인덱스부터 연산을 진행해주면된다.
    //2보다 큰경우 2일경우,3일경우 2일경우에는 현재자리에 0을 넣고 1을 넘겨준다. 3일경우 현재자리에 1을넣고 1을 넘겨준다.
    
    
    //변환하고 더한후 다시 이진수로 변환하는 방법
    const makedecimal = (arr)=>{
           let num = 0;
    //i는 제곱수,j는 인덱스
        for(let i =0,j=arr.length-1; i < arr.length; i++,j--){
            num += 2**i*arr[j]
        }
        return num
    }
    const answer = makedecimal(bin1)+makedecimal(bin2)
    return answer.toString(2)
}