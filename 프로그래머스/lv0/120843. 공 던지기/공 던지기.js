function solution(numbers, k) {
    //수도코드
    //정수배열과 숫자를 입력받고 숫자를 반환해야한다.
    //정수배열을 1부터 시작하여 오름차순으로 정렬되어있다.
    //공을 오른쪽으로 한명을 건너뛰고 그다음 사람에게만 던질수 있다.
    //원형으로 서있다. 1번째와 마지막은 바로 옆에 있다.
    //시계방향으로 번호가 증가하는 순서로 서있다.
    //최종적으로 마지막에 공을 던지는 사람의 번호를 반환해야한다.
    
    // 0번째 인덱스에서 시작하여 1회마다 인덱스가 2씩 증가하는 상황과 같다.
    // 2씩 증가하기에 k가 numbers의 길이의 절반보다 크게되면 다시 0번째 인덱스로 돌아가야한다.
    // 마지막에 공을 던진 사람을 구해야하므로 k만큼 연산하는것이 아니라 k-1만큼 연산한다.
    // 마지막에 던진사람의 번호를 알수 있다.
    // 나머지연산자%를 사용하여 2*(k-1)을 입력받은 배열의 길이만큼 나누었을때,
    // 나머지가 마지막으로 던진사람의 인덱스가 된다. 
    // 연산을 하고 그 값을 인덱스로 접근하여 입력받은 배열의 요소를 반환한다. 
    
    // return numbers[2*(k-1)%numbers.length];
    //가독성을 위해 변수에 담았다.
    // const last = 2*(k-1)%numbers.length;
    // return numbers[last];
    
    //k-1 대신 --k를 사용하였다.
    const last = 2*(--k)%numbers.length;
    return numbers[last];
}